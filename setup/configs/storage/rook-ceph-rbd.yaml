# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This section is adapted from cluster/examples/kubernetes/ceph/pool.yaml in https://github.com/rook/rook.
apiVersion: ceph.rook.io/v1
kind: CephBlockPool
metadata:
  name: rbd
  namespace: rook-ceph
spec:
  # The failure domain will spread the replicas of the data across different failure zones
  failureDomain: host
  # The root of the crush hierarchy that will be used for the pool. If not set, will use "default".
  crushRoot: default
  # For a pool based on raw copies, specify the number of copies. A size of 1 indicates no redundancy.
  replicated:
    size: 3
  # For an erasure-coded pool, comment out the replicated size above and uncomment the following settings.
  # Make sure you have enough OSDs to support the replica size or sum of the erasure coding and data chunks.
  #erasureCoded:
  #  dataChunks: 2
  #  codingChunks: 1

---
# This section is adapted from cluster/examples/kubernetes/ceph/storageclass.yaml in https://github.com/rook/rook.
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
   name: rbd
provisioner: ceph.rook.io/block
parameters:
  blockPool: rbd
  # Specify the namespace of the rook cluster from which to create volumes.
  # If not specified, it will use `rook` as the default namespace of the cluster.
  # This is also the namespace where the cluster will be
  clusterNamespace: rook-ceph
  # Specify the filesystem type of the volume. If not specified, it will use `ext4`.
  fstype: xfs
  # (Optional) Specify an existing Ceph user that will be used for mounting storage with this StorageClass.
  #mountUser: user1
  # (Optional) Specify an existing Kubernetes secret name containing just one key holding the Ceph user secret.
  # The secret must exist in each namespace(s) where the storage will be consumed.
  #mountSecret: ceph-user1-secret

